{"ast":null,"code":"var _jsxFileName = \"/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get(\"https://opentdb.com/api.php\", {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer;\n        const options = [...questionItem.incorrect_answers, answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlForm: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    ref: categoryEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, category.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Number of questions\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    min: \"1\",\n    step: \"1\",\n    defaultValue: 10,\n    ref: amountEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Generate\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlashcardList, {\n    flashcards: flashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"2+2\",\n  answer: \"4\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 2,\n  question: \"3+2\",\n  answer: \"5\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 3,\n  question: \"1+2\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 4,\n  question: \"2+1\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 5,\n  question: \"12+2\",\n  answer: \"14\",\n  options: [\"2\", \"3\", \"14\", \"15\"]\n}];\nexport default App;","map":{"version":3,"sources":["/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js"],"names":["React","useState","useEffect","useRef","axios","FlashcardList","App","flashcards","setFlashcards","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","category","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","id","Date","now","question","sort","Math","random","console","log","name","SAMPLE_FLASHCARDS"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get(\"https://opentdb.com/api.php\", {\n        params: {\n          amount: amountEl.current.value,\n          category: categoryEl.current.value,\n        },\n      })\n      .then((res) => {\n        setFlashcards(\n          res.data.results.map((questionItem, index) => {\n            const answer = questionItem.correct_answer;\n            const options = [...questionItem.incorrect_answers, answer];\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - 0.5),\n            };\n          })\n        );\n        console.log(res.data);\n      });\n  }\n  return (\n    <React.Fragment>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlForm=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            step=\"1\"\n            defaultValue={10}\n            ref={amountEl}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </React.Fragment>\n  );\n}\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"2+2\",\n    answer: \"4\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 2,\n    question: \"3+2\",\n    answer: \"5\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 3,\n    question: \"1+2\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 4,\n    question: \"2+1\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 5,\n    question: \"12+2\",\n    answer: \"14\",\n    options: [\"2\", \"3\", \"14\", \"15\"],\n  },\n];\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}