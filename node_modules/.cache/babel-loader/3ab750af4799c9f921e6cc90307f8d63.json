{"ast":null,"code":"var _jsxFileName = \"/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer;\n        const options = [...questionItem.incorrect_answers, answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"continer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FlashcardList, {\n    flashcards: flashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"2+2\",\n  answer: \"4\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 2,\n  question: \"3+2\",\n  answer: \"5\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 3,\n  question: \"1+2\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 4,\n  question: \"2+1\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 5,\n  question: \"12+2\",\n  answer: \"14\",\n  options: [\"2\", \"3\", \"14\", \"15\"]\n}];\nexport default App;","map":{"version":3,"sources":["/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js"],"names":["React","useState","useEffect","axios","FlashcardList","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","get","then","res","data","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","id","Date","now","question","decodeString","sort","Math","random","console","log","str","textArea","document","createElement","innerHTML","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then((res) => {\n      setFlashcards(\n        res.data.results.map((questionItem, index) => {\n          const answer = questionItem.correct_answer;\n          const options = [...questionItem.incorrect_answers, answer];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - 0.5),\n          };\n        })\n      );\n      console.log(res.data);\n    });\n  }, []);\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  return (\n    <div className=\"continer\">\n      <FlashcardList flashcards={flashcards} />\n    </div>\n  );\n}\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"2+2\",\n    answer: \"4\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 2,\n    question: \"3+2\",\n    answer: \"5\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 3,\n    question: \"1+2\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 4,\n    question: \"2+1\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 5,\n    question: \"12+2\",\n    answer: \"14\",\n    options: [\"2\", \"3\", \"14\", \"15\"],\n  },\n];\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}