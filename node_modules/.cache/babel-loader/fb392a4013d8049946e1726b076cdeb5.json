{"ast":null,"code":"var _jsxFileName = \"/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer;\n        const options = [...questionItem.incorrect_answers, answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - 0.5)\n        };\n      }));\n      console.log(res.data);\n    });\n  }, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlForm: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    ref: categoryEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, category.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Category\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlashcardList, {\n    flashcards: flashcards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"2+2\",\n  answer: \"4\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 2,\n  question: \"3+2\",\n  answer: \"5\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 3,\n  question: \"1+2\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 4,\n  question: \"2+1\",\n  answer: \"3\",\n  options: [\"2\", \"3\", \"4\", \"5\"]\n}, {\n  id: 5,\n  question: \"12+2\",\n  answer: \"14\",\n  options: [\"2\", \"3\", \"14\", \"15\"]\n}];\nexport default App;","map":{"version":3,"sources":["/Users/tingyuanlu/Desktop/Learn React/flashcard/src/App.js"],"names":["React","useState","useEffect","useRef","axios","FlashcardList","App","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categories","setCategories","categoryEl","get","then","res","data","trivia_categories","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","id","Date","now","question","decodeString","sort","Math","random","console","log","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","category","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport FlashcardList from \"./FlashcardList\";\n\nfunction App() {\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\").then((res) => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then((res) => {\n      setFlashcards(\n        res.data.results.map((questionItem, index) => {\n          const answer = questionItem.correct_answer;\n          const options = [...questionItem.incorrect_answers, answer];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - 0.5),\n          };\n        })\n      );\n      console.log(res.data);\n    });\n  }, []);\n  function decodeString(str) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n  return (\n    <React.Fragment>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlForm=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map((category) => {\n              return (\n                <option value={category.id} key={category.id}>\n                  {category.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"Category\">Category</label>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </React.Fragment>\n  );\n}\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"2+2\",\n    answer: \"4\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 2,\n    question: \"3+2\",\n    answer: \"5\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 3,\n    question: \"1+2\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 4,\n    question: \"2+1\",\n    answer: \"3\",\n    options: [\"2\", \"3\", \"4\", \"5\"],\n  },\n  {\n    id: 5,\n    question: \"12+2\",\n    answer: \"14\",\n    options: [\"2\", \"3\", \"14\", \"15\"],\n  },\n];\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}